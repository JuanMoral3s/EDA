
#include <stdbool.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX 32
#define INV 3


typedef struct

{
    unsigned int barcode;
    char name[MAX];
    float price;
}Product;

//Constructor
void Product_Ctor(Product* this, int barcode, char* name, float price)
    {
        if(barcode>=100 && barcode<200)
        {
        this->barcode = barcode;
        strncpy(this->name, name, MAX);
        this->price = price;
        }
    }

// Funciones Set
void Product_Set_Barcode(Product* this, unsigned int barcode)
{
    this->barcode = barcode;
}

void Product_Set_Name(Product* this, char* name)
{
    strncpy(this->name, name, MAX);
}

void Product_Set_Price(Product* this, float price)
{
    this->price = price;   
}    

// Funciones Get

const unsigned int Product_Get_Barcode( const Product* this)
{
    return this->barcode;
}

const char* Product_Get_Name( const Product* this)
{
    return this->name;
}

const float Product_Get_Price( const Product* this)
{
    return this->price;    
}

// Funcion Assign 

void Product_Assign( Product* this, const Product* other )
{
    this->barcode = other->barcode;
    strncpy( this->name, other->name, MAX);
    this->price = other->price;
}

// Funcion Is_Equal

bool Product_IsEqual( const Product* this, const Product* other )
{
    return( this->barcode == other->barcode && this->name == other->name && this->price == other->price );
}

bool Product_IsEqual_ByBarcode( const Product* this, const Product* other )
{
    return( this->barcode == other->barcode );
}

// New delete

Product* Product_New( int barcode, char* name, float price )
{
    Product* p = (Product*) malloc(sizeof(Product));
    Product_Ctor( p , barcode , name , price);
}

void Product_Delete(Product** this)
{
    free( *this);
    this == NULL;
}

int main()
{


Product* stock[ INV ];

for(int i = 0; i < INV ; ++i)
{
    stock[ i ] = Product_New( 102, "CafÃ¨", 30);
}

if(Product_IsEqual_ByBarcode( stock [ 0 ], stock [ 2 ])){
    printf("Los productos son iguales\n");
}


for(int i = 0; i < INV ; ++i){
    printf("Codigo de barras : %d\t Nombre del producto : %s\t Precio del producto: %f\n"
    , Product_Get_Barcode(stock[i]), Product_Get_Name(stock[i]), Product_Get_Price(stock[i]));
}

for(int i = 0; i < INV; ++i)
{
    Product_Delete(&stock[i]);
}


return 0;
}
